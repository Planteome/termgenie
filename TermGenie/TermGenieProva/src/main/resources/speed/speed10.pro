%Generated by org.bbop.experiments.SimpleFactBaseGenerator

term('ID:1','Label for 1','Textual defintion for 1').
term('ID:2','Label for 2','Textual defintion for 2').
isTriple('ID:2', subClassOf,'ID:1').
term('ID:3','Label for 3','Textual defintion for 3').
isTriple('ID:3', subClassOf,'ID:1').
term('ID:4','Label for 4','Textual defintion for 4').
isTriple('ID:4', subClassOf,'ID:2').
term('ID:5','Label for 5','Textual defintion for 5').
isTriple('ID:5', subClassOf,'ID:2').
term('ID:6','Label for 6','Textual defintion for 6').
isTriple('ID:6', subClassOf,'ID:3').
term('ID:7','Label for 7','Textual defintion for 7').
isTriple('ID:7', subClassOf,'ID:3').
term('ID:8','Label for 8','Textual defintion for 8').
isTriple('ID:8', subClassOf,'ID:4').
term('ID:9','Label for 9','Textual defintion for 9').
isTriple('ID:9', subClassOf,'ID:4').
term('ID:10','Label for 10','Textual defintion for 10').
isTriple('ID:10', subClassOf,'ID:5').


isID(ID) :- term(ID,Label,TextDef).
isLabel(Label) :- term(ID,Label,TextDef).
isTextDef(TextDef) :- term(ID,Label,TextDef).

isTransitive(subClassOf).
isTransitive(superClassOf).

isTTriple(A, Relation, B) :- isTriple(A, Relation, B), isTransitive(Relation).
isTTriple(A, Relation, C) :- isTriple(A, Relation, B), isTTriple(B, Relation, C), isTransitive(Relation).

isTriple(Subject, superClassOf, Object) :- isTriple(Object, subClassOf, Subject).

